// @strict-types


&НаСервере
Процедура ПринятьНаСервере()

	Изменения = Новый Структура;
	Изменения.Вставить("Принята", Истина);
	Изменения.Вставить("Принял", Пользователи.ТекущийПользователь());
	
	ИзменитьДанныеСтроки(Изменения);
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
	ПринятьНаСервере();
	УстановитьОтображение();
КонецПроцедуры

&НаСервере
Процедура РелизОтборПриИзмененииНаСервере()
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Релиз", Релиз,
		ВидСравненияКомпоновкиДанных.Равно,, Истина);
КонецПроцедуры

&НаКлиенте
Процедура РелизОтборПриИзменении(Элемент)
		//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора((Список, "Релиз", Релиз, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Релиз", Релиз,
		ВидСравненияКомпоновкиДанных.Равно,, Истина);

	//РелизОтборПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	ПодключитьОбработчикОжидания("УстановитьОтображение", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображение() Экспорт
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.КомандаПринять.Доступность = Не ТекущиеДанные.Принята;
	Элементы.СнятьОтметку.Доступность = ТекущиеДанные.Принята;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиПользователя = Справочники.НастройкиПользователей.НастройкиТекущегоПользователя();
	
	Релиз = Документы.Релиз.ПоследнийДокумент(НастройкиПользователя.Проект);
	РелизОтборПриИзмененииНаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	СнятьОтметкуНаСервере();
	УстановитьОтображение();
КонецПроцедуры

&НаСервере
Процедура СнятьОтметкуНаСервере()

	Изменения = Новый Структура;
	Изменения.Вставить("Принята", Ложь);
	Изменения.Вставить("Принял", Неопределено);
	
	ИзменитьДанныеСтроки(Изменения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьОтображение();
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомментарийНаСервере(Комментарий)

	Если Комментарий = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Изменения = Новый Структура;
	Изменения.Вставить("Комментарий", Комментарий);
	
	ИзменитьДанныеСтроки(Изменения);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьДанныеСтроки(Изменения)
	
	Перем Запись;
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Запись = РегистрыСведений.ЗадачиРелиза.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ТекущаяСтрока, "Релиз, Задача, Постановщик, Ответственный");
	Запись.Прочитать();
	ЗаполнитьЗначенияСвойств(Запись, Изменения);
	Запись.Записать();
	
	Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
АСИНХ Процедура ДобавитьКомментарий(Команда)

	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Комментарий = ТекДанные.Комментарий;
	Обещание = ВвестиСтрокуАсинх(Комментарий, НСтр("ru='Введите комментарий'"), , Истина);
	Результат = Ждать Обещание;
	ДобавитьКомментарийНаСервере(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.СсылкаBitrix) Тогда 
		ПерейтиПоНавигационнойСсылке(ТекДанные.СсылкаBitrix);
	КонецЕсли;
	
КонецПроцедуры
