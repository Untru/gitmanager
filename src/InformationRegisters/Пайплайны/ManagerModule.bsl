// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ДобавитьПайплайн(Сборка) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.ДатаРегистрации = ТекущаяДатаСеанса();
	Запись.Статус = Перечисления.СтатусыПайплайнов.Новый; 
	Запись.Сборка = Сборка;
	Запись.UID = Строка(Новый УникальныйИдентификатор);
	Запись.Записать();
	
КонецПроцедуры

Функция АктивныеПайплайны() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пайплайны.UID КАК UID,
		|	Пайплайны.Сборка КАК Сборка,
		|	Пайплайны.Сборка.Задача КАК Задача,
		|	Пайплайны.Статус КАК Статус,
		|	Пайплайны.НомерJob КАК НомерJob,
		|	Пайплайны.ЮрлСостоянияJob КАК ЮрлСостоянияJob,
		|	Пайплайны.Сборка.Задача.НомерЗадачи КАК НомерЗадачи
		|ИЗ
		|	РегистрСведений.Пайплайны КАК Пайплайны
		|ГДЕ
		|	Пайплайны.Статус <> ЗНАЧЕНИЕ(перечисление.СтатусыПайплайнов.ПрочитанОтчет)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Пайплайны.ДатаРегистрации УБЫВ";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьЮрлСостояния(UID, ЮрлСостоянияJob) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.UID = UID;
	Запись.Прочитать();
	Запись.Статус = Перечисления.СтатусыПайплайнов.ДобавленВОчередь;
	Запись.ДатаДобавленияВОчередь = ТекущаяДатаСеанса();
	Запись.ЮрлСостоянияJob = ЮрлСостоянияJob;
	Запись.Записать();
	
КонецПроцедуры

Процедура ДобавитьНомерJob(UID, НомерJob) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.UID = UID;
	Запись.Прочитать();
	Запись.НомерJob = НомерJob;
	Запись.Статус = Перечисления.СтатусыПайплайнов.Выполняется;
	Запись.ДатаЗапуска = ТекущаяДатаСеанса();
	Запись.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьВыполнениеСборки(UID, Лог) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.UID = UID;
	Запись.Прочитать();
	Запись.Статус = Перечисления.СтатусыПайплайнов.Выполнено;
	Запись.ДатаВыполнения = ТекущаяДатаСеанса();
	Запись.Лог = Новый ХранилищеЗначения(Лог);
	Запись.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьЛоги(UID, Лог) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.UID = UID;
	Запись.Прочитать();
	Запись.Лог = Новый ХранилищеЗначения(Лог);
	Запись.Записать();
	
КонецПроцедуры

Процедура ЗаписатьРезультатТеста(Пайплайн, ИтогиСборки) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.UID = Пайплайн.UID;
	Запись.Прочитать();
	Запись.Статус = Перечисления.СтатусыПайплайнов.ПрочитанОтчет;
	Запись.НеудачныеТесты = ИтогиСборки["КоличествоОшибок"];
	Запись.УдачныеТесты = ИтогиСборки["КоличествоУспешных"];
	Запись.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли
