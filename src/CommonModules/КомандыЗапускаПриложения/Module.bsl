// @strict-types

#Область ПрограммныйИнтерфейс

#Область Команды

#Область КомандыGIT

Функция НовыйКомандаПолученияВеток() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("branch");
	КомандаЗапуска.Добавить("--no-color");
	КомандаЗапуска.Добавить("-a");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

Функция НовыйКомандаПерейтиНаНовуюВетку(НоваяВетка) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("switch");
	ДобавитьОпцию(КомандаЗапуска, "-c", НоваяВетка);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

Функция НовыйКомандаПерейтиНаВеткуЛокально(ИмяВетки) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("checkout");
	КомандаЗапуска.Добавить(ИмяВетки);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

Функция НовыйКомандаОтправить() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("push");
	КомандаЗапуска.Добавить("--all");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

//@skip-check export-procedure-missing-comment
Функция НовыйКомандаТекущаяВетка() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("symbolic-ref");
	КомандаЗапуска.Добавить("--short");
	КомандаЗапуска.Добавить("HEAD");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции
// Функция - Формирование строки запуска
//   - 
//
Функция НовыйКомандаИндексироватьВсе() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("add");
	КомандаЗапуска.Добавить(".");

	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;

КонецФункции

// Функция - Формирование строки запуска
//   - 
//
Функция НовыйКомандаКоммит(Комментарий) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("commit");
	КомандаЗапуска.Добавить("-m");
	КомандаЗапуска.Добавить(Комментарий);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;

КонецФункции

// Функция - Формирование строки запуска
//   - 
//
Функция НовыйКомандаНастройкаSSLVerify() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("config");
	КомандаЗапуска.Добавить("--global");
	КомандаЗапуска.Добавить("http.sslVerify");
	КомандаЗапуска.Добавить("false");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;

КонецФункции

// Функция - Формирование строки запуска
//   - 
//
Функция НовыйКомандаОбновитьРепозиторийИзУдаленного() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("pull");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

// Функция - Формирование строки запуска
//   - 
//
Функция НовыйКомандаСтатусГит() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("status");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

// Функция - Формирование строки запуска
//   - 
//
Функция НовыйКомандаКлонироватьРепозиторий(URLРепозитория) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("clone");
	КомандаЗапуска.Добавить(URLРепозитория);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;

КонецФункции

// Функция - Формирование строки запуска
//   - git fetch --all
//
Функция НовыйКомандаИзвлечениеИзменений() Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("git");
	КомандаЗапуска.Добавить("fetch");
	КомандаЗапуска.Добавить("--all");

	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска;
	
КонецФункции

#КонецОбласти

#Область КомандыOscript

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	NewBranche - Новая ветка
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	NamesDataProcessors - Обработки через "," (запятая)
//	LoadDB - Загрузка базы из файлов (истина, ложь)
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаПереходаНаВетку(ПараметрыБазы, ПараметрыЗадачи) Экспорт

	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("branche");
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--ServerDB", ПараметрыБазы.ИмяSQL);
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--NumberPlatform", ПараметрыБазы.НомерВерсииПлатформы);
	ДобавитьОпцию(КомандаЗапуска, "--TypeDB", ПараметрыБазы.ТипSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLoginDB", ПараметрыБазы.ЛогинSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswdDB", ПараметрыБазы.ПарольSQL);
	ДобавитьОпцию(КомандаЗапуска, "--PathServerDB", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--RunRas", "false");
	ДобавитьОпцию(КомандаЗапуска, "--MethodLoadDB", Строка(ПараметрыБазы.РежимРаботыКонфигурации));

	ДобавитьОпцию(КомандаЗапуска, "--NameDBWeb", ПараметрыБазы.БазаПубликации);
	ДобавитьОпцию(КомандаЗапуска, "--ServerDBWeb", ПараметрыБазы.СерверПубликации);	
	
	//ПараметрыЗадачи
	ДобавитьОпцию(КомандаЗапуска, "--NewBranche", ПараметрыЗадачи.ИмяВетки);
	ДобавитьОпцию(КомандаЗапуска, "--LoadDB", Формат(ПараметрыЗадачи.ДорабатыватьКонфигурацию, "БЛ=false; БИ=true"));		
	ДобавитьОпцию(КомандаЗапуска, "--NamesDataProcessors", ПараметрыЗадачи.ВнешниеФайлы);

	ДобавитьОпцию(КомандаЗапуска, "--Extensions", ПараметрыЗадачи.Расширения);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

Функция НовыйКомандаПереходаНаВеткуАктуализацияОбработок(ПараметрыБазы, ПараметрыЗадачи) Экспорт

	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("brancheToDevelop");
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--ServerDB", ПараметрыБазы.ИмяSQL);
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--NumberPlatform", ПараметрыБазы.НомерВерсииПлатформы);
	ДобавитьОпцию(КомандаЗапуска, "--TypeDB", ПараметрыБазы.ТипSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLoginDB", ПараметрыБазы.ЛогинSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswdDB", ПараметрыБазы.ПарольSQL);
	ДобавитьОпцию(КомандаЗапуска, "--PathServerDB", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--RunRas", "false");
	ДобавитьОпцию(КомандаЗапуска, "--MethodLoadDB", Строка(ПараметрыБазы.РежимРаботыКонфигурации));
	
	ДобавитьОпцию(КомандаЗапуска, "--PathStorage", ПараметрыБазы.ПутьКХранилищу);
	ДобавитьОпцию(КомандаЗапуска, "--UserStorage", ПараметрыБазы.ПользовательХранилища);
	
	ДобавитьОпцию(КомандаЗапуска, "--NameDBWeb", ПараметрыБазы.БазаПубликации);
	ДобавитьОпцию(КомандаЗапуска, "--ServerDBWeb", ПараметрыБазы.СерверПубликации);	
	
	//ПараметрыЗадачи
	ДобавитьОпцию(КомандаЗапуска, "--NewBranche", ПараметрыЗадачи.ИмяВетки);

	ДобавитьОпцию(КомандаЗапуска, "--UpdateDB", ПараметрыЗадачи.ОбновитьКонфИзХранилища);
	ДобавитьОпцию(КомандаЗапуска, "--LoadDB", ПараметрыЗадачи.ДорабатыватьКонфигурацию);
	ДобавитьОпцию(КомандаЗапуска, "--NamesDataProcessors", ПараметрыЗадачи.ВнешниеФайлы);
	ДобавитьОпцию(КомандаЗапуска, "--Extensions", ПараметрыЗадачи.Расширения);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

Функция НовыйКомандаПереходаНаВеткуDevelop(ПараметрыБазы) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("BrancheDevelop");
	КомандаЗапуска.Добавить("--PathRepository");
	КомандаЗапуска.Добавить(ПараметрыБазы.КаталогБазы);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//PathRepository - Путь репозитория
//NameDB - Имя информационной базы
//UsrLogin1c - Имя пользователя 1с
//UsrPswd1c - Пароль пользователя 1с
//PathServer1c - Путь к серверу
//NumberPlatform - Номер версии платформы 1с
//TypeDB - Тип СУБД
//UsrLoginDB - Имя пользователя СУБД
//UsrPswdDB - Пароль пользователя СУБД
//PathServerDB - Путь к серверу СУБД
//TextCommit - Текст коммита
//Репозиторий - Ссылка на Гит лаб
//TokenConnectionGitLab - Токен подключения к гитлаб
//IdProject - ИД проекта Гит лаб (отдельно ВМС, отдельно ЕРП, отдельно ТМС)// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаФиксацияИзменений(ПараметрыБазы, НастройкиПользователя, ПараметрыЗадачи, ДополнительныеПараметры) Экспорт

	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("commit");
	
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--NumberPlatform", ПараметрыБазы.НомерВерсииПлатформы);	
	ДобавитьОпцию(КомандаЗапуска, "--ServerDB", ПараметрыБазы.ИмяSQL);
	ДобавитьОпцию(КомандаЗапуска, "--TypeDB", ПараметрыБазы.ТипSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLoginDB", ПараметрыБазы.ЛогинSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswdDB", ПараметрыБазы.ПарольSQL);
	ДобавитьОпцию(КомандаЗапуска, "--PathServerDB", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--UrlRemoteRepository", ПараметрыБазы.Репозиторий);
	ДобавитьОпцию(КомандаЗапуска, "--TokenConnectionGitLab", НастройкиПользователя.ТокенGit);
	ДобавитьОпцию(КомандаЗапуска, "--IdProject", ПараметрыБазы.ИДПроектаРепозитория);
	ДобавитьОпцию(КомандаЗапуска, "--RunRas", "false");
	ДобавитьОпцию(КомандаЗапуска, "--MethodLoadDB", Строка(ПараметрыБазы.РежимРаботыКонфигурации));

	ДобавитьОпцию(КомандаЗапуска, "--CommitAuthor", РаботаСGit.АвторКоммита(НастройкиПользователя));
	
	Если ЗначениеЗаполнено(ПараметрыЗадачи.ДорабатыватьКонфигурацию) Тогда
		ДобавитьОпцию(КомандаЗапуска, "--LoadDB", Формат(ПараметрыЗадачи.ДорабатыватьКонфигурацию, "БЛ=false; БИ=true"));
	КонецЕсли;
	
	ДобавитьОпцию(КомандаЗапуска, "--Extensions", ПараметрыЗадачи.Расширения);
	
	//ПараметрыЗадачи
	ДобавитьОпцию(КомандаЗапуска, "--TextCommit", ДополнительныеПараметры.ТекстКоммита);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
			
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//PathRepository - Путь репозитория
//NewBranche - Новая ветка
//   - 
//
Функция НовыйКомандаСозданияВетки(ПараметрыБазы, ПараметрыЗадачи) Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("CreateBranche");
	
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--NewBranche", ПараметрыЗадачи.ИмяВетки);
			
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//PathRepository - Путь репозитория
//PathRemoteRepository - Путь удаленного репозитория
//UserName - Имя пользователя
//UserEmail - Почта пользователя
//   - 
//
Функция НовыйКомандаСозданияРепозитория(ПараметрыБазы, НастройкиПользователя, ПараметрыЗадачи) Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("init");
	
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathRemoteRepository", ПараметрыБазы.PathGitClone);
	ДобавитьОпцию(КомандаЗапуска, "--UserName", НастройкиПользователя.ИмяПользователяGitLab);	
	ДобавитьОпцию(КомандаЗапуска, "--UserEmail", НастройкиПользователя.ПочтаПользователяGitLab);
			
			
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	ReleaseBranche - Ветка релиза
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаСборкиРелиза(ПараметрыБазы, Релиз, СписокОбновляемыхОбработок) Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");

	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("BuildRelease");
	
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--NumberPlatform", ПараметрыБазы.НомерВерсииПлатформы);
	ДобавитьОпцию(КомандаЗапуска, "--TypeDB", ПараметрыБазы.ТипSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLoginDB", ПараметрыБазы.ЛогинSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswdDB", ПараметрыБазы.ПарольSQL);
	ДобавитьОпцию(КомандаЗапуска, "--PathServerDB", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--RunRas", "false");
	ДобавитьОпцию(КомандаЗапуска, "--NameDBWeb", ПараметрыБазы.БазаПубликации);
	ДобавитьОпцию(КомандаЗапуска, "--ServerDBWeb", ПараметрыБазы.СерверПубликации);	
	ДобавитьОпцию(КомандаЗапуска, "--MethodLoadDB", Строка(ПараметрыБазы.РежимРаботыКонфигурации));
	ДобавитьОпцию(КомандаЗапуска, "--LoadDB", ПараметрыБазы.СобиратьКонфигурациюВРелиз);
	ДобавитьОпцию(КомандаЗапуска, "--PathRelease", ПараметрыБазы.КаталогСборкиРелиза);	
	ДобавитьОпцию(КомандаЗапуска, "--NameRelease", Релиз.НомерРелиза);
	ДобавитьОпцию(КомандаЗапуска, "--PathStorage", ПараметрыБазы.ПутьКХранилищу);
	ДобавитьОпцию(КомандаЗапуска, "--UserStorage", ПараметрыБазы.ПользовательХранилища);	
	
	//Хранилище расширений
	ДобавитьОпцию(КомандаЗапуска, "--PathStorageAelita", ПараметрыБазы.ПутьКХранилищуAelita);
	ДобавитьОпцию(КомандаЗапуска, "--UserStorageAelita", ПараметрыБазы.ПользовательХранилищаAelita);
	ДобавитьОпцию(КомандаЗапуска, "--PathStorageToolsWorld", ПараметрыБазы.ПутьКХранилищуToolsWorld);
	ДобавитьОпцию(КомандаЗапуска, "--UserStorageToolsWorld", ПараметрыБазы.ПользовательХранилищаToolsworld);
	
	ДобавитьОпцию(КомандаЗапуска, "--NamesDataProcessors", СписокОбновляемыхОбработок);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	ReleaseBranche - Ветка релиза
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаСборкаОбработок(ПараметрыБазы, НастройкиПроекта, СписокОбновляемыхОбработок, НомерЗадачи = "") Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");

	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("CompileDataProcessors");
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--NumberPlatform", ПараметрыБазы.НомерВерсииПлатформы);
	ДобавитьОпцию(КомандаЗапуска, "--TypeDB", ПараметрыБазы.ТипSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLoginDB", ПараметрыБазы.ЛогинSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswdDB", ПараметрыБазы.ПарольSQL);
	ДобавитьОпцию(КомандаЗапуска, "--PathServerDB", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--RunRas", "false");
	ДобавитьОпцию(КомандаЗапуска, "--NameDBWeb", ПараметрыБазы.БазаПубликации);
	ДобавитьОпцию(КомандаЗапуска, "--ServerDBWeb", ПараметрыБазы.СерверПубликации);
	ДобавитьОпцию(КомандаЗапуска, "--MethodLoadDB", Строка(ПараметрыБазы.РежимРаботыКонфигурации));
	ДобавитьОпцию(КомандаЗапуска, "--LoadDB", ПараметрыБазы.СобиратьКонфигурациюВРелиз);
	ДобавитьОпцию(КомандаЗапуска, "--PathRelease", НастройкиПроекта.ПапкаАктуальныхОбработок);
	ДобавитьОпцию(КомандаЗапуска, "--NameBranche", НомерЗадачи);
	ДобавитьОпцию(КомандаЗапуска, "--NamesDataProcessors", СписокОбновляемыхОбработок);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
		
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	ReleaseBranche - Ветка релиза
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаПлановоеОбновлениеБазы(ПараметрыБазы, Релиз) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("UpdateDB");
	КомандаЗапуска.Добавить("--PathRepository");
	КомандаЗапуска.Добавить(ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	КомандаЗапуска.Добавить("--NameDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.ИмяИнформационнойБазы);
	КомандаЗапуска.Добавить("--UsrLogin1c");
	КомандаЗапуска.Добавить(ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	КомандаЗапуска.Добавить("--UsrPswd1c");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	КомандаЗапуска.Добавить("--PathServer1с");
	КомандаЗапуска.Добавить(ПараметрыБазы.КластерСерверов);
	КомандаЗапуска.Добавить("--NumberPlatform");
	КомандаЗапуска.Добавить(ПараметрыБазы.НомерВерсииПлатформы);
	КомандаЗапуска.Добавить("--TypeDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.ТипSQL);
	КомандаЗапуска.Добавить("--UsrLoginDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.ЛогинSQL);
	КомандаЗапуска.Добавить("--UsrPswdDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПарольSQL);
	КомандаЗапуска.Добавить("--PathServerDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.КластерСерверов);
	КомандаЗапуска.Добавить("--RunRas");
	КомандаЗапуска.Добавить("false");
	КомандаЗапуска.Добавить("--NameDBWeb");
	КомандаЗапуска.Добавить(ПараметрыБазы.БазаПубликации);
	КомандаЗапуска.Добавить("--ServerDBWeb");
	КомандаЗапуска.Добавить(ПараметрыБазы.СерверПубликации);	
	КомандаЗапуска.Добавить("--MethodLoadDB");
	КомандаЗапуска.Добавить(Строка(ПараметрыБазы.РежимРаботыКонфигурации));
	КомандаЗапуска.Добавить("--LoadDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.СобиратьКонфигурациюВРелиз);
	КомандаЗапуска.Добавить("--PathRelease");
	КомандаЗапуска.Добавить(ПараметрыБазы.КаталогСборкиРелиза);	
	КомандаЗапуска.Добавить("--NameRelease");
	КомандаЗапуска.Добавить(Релиз.НомерРелиза);
	КомандаЗапуска.Добавить("--PathStorage");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПутьКХранилищу);
	КомандаЗапуска.Добавить("--UserStorage");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПользовательХранилища);	
	//КомандаЗапуска.Добавить("--AccessCode");
	//КомандаЗапуска.Добавить("Обновление");

	//Хранилище расширений
	КомандаЗапуска.Добавить("--PathStorageAelita");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПутьКХранилищуAelita);
	КомандаЗапуска.Добавить("--UserStorageAelita");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПользовательХранилищаAelita);
	КомандаЗапуска.Добавить("--PathStorageToolsWorld");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПутьКХранилищуToolsWorld);
	КомандаЗапуска.Добавить("--UserStorageToolsWorld");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПользовательХранилищаToolsworld);
		
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
		
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	ReleaseBranche - Ветка релиза
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаПлановоеОбновлениеБазыОбработки(ПараметрыБазы, Релиз, СписокОбновляемыхОбработок) Экспорт
	
	//ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");

	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("UpdateDBDataProcessors");
	КомандаЗапуска.Добавить("--PathRepository");
	КомандаЗапуска.Добавить(ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	КомандаЗапуска.Добавить("--NameDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.ИмяИнформационнойБазы);
	КомандаЗапуска.Добавить("--UsrLogin1c");
	КомандаЗапуска.Добавить(ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	КомандаЗапуска.Добавить("--UsrPswd1c");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	КомандаЗапуска.Добавить("--PathServer1с");
	КомандаЗапуска.Добавить(ПараметрыБазы.КластерСерверов);
	КомандаЗапуска.Добавить("--RunRas");
	КомандаЗапуска.Добавить("false");
	КомандаЗапуска.Добавить("--NumberPlatform");
	КомандаЗапуска.Добавить(ПараметрыБазы.НомерВерсииПлатформы);
	КомандаЗапуска.Добавить("--NameDBWeb");
	КомандаЗапуска.Добавить(ПараметрыБазы.БазаПубликации);
	КомандаЗапуска.Добавить("--ServerDBWeb");
	КомандаЗапуска.Добавить(ПараметрыБазы.СерверПубликации);	
	КомандаЗапуска.Добавить("--PathRelease");
	КомандаЗапуска.Добавить(ПараметрыБазы.КаталогСборкиРелиза);	
	КомандаЗапуска.Добавить("--NameRelease");
	КомандаЗапуска.Добавить(Релиз.НомерРелиза);
	КомандаЗапуска.Добавить("--NamesDataProcessors");
	КомандаЗапуска.Добавить(СписокОбновляемыхОбработок);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	ReleaseBranche - Ветка релиза
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	MethodLoadDB - ibcmd / designer
//	PathDataProcessors - путь к папке с обработками
//	NamesDataProcessors - список обработок, не обязательное
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаОбновлениеОбработкиИзПапки(ПараметрыБазы, ПутьКПапкеВнешнихОбработок) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("UpdateDataProcessorsFromFolder");
	КомандаЗапуска.Добавить("--PathRepository");
	КомандаЗапуска.Добавить(ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	КомандаЗапуска.Добавить("--NameDB");
	КомандаЗапуска.Добавить(ПараметрыБазы.ИмяИнформационнойБазы);
	КомандаЗапуска.Добавить("--UsrLogin1c");
	КомандаЗапуска.Добавить(ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	КомандаЗапуска.Добавить("--UsrPswd1c");
	КомандаЗапуска.Добавить(ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	КомандаЗапуска.Добавить("--PathServer1с");
	КомандаЗапуска.Добавить(ПараметрыБазы.КластерСерверов);
	КомандаЗапуска.Добавить("--RunRas");
	КомандаЗапуска.Добавить("false");
	КомандаЗапуска.Добавить("--NumberPlatform");
	КомандаЗапуска.Добавить(ПараметрыБазы.НомерВерсииПлатформы);
	КомандаЗапуска.Добавить("--NameDBWeb");
	КомандаЗапуска.Добавить(ПараметрыБазы.БазаПубликации);
	КомандаЗапуска.Добавить("--ServerDBWeb");
	КомандаЗапуска.Добавить(ПараметрыБазы.СерверПубликации);	
	КомандаЗапуска.Добавить("--PathDataProcessors");
	КомандаЗапуска.Добавить(ПутьКПапкеВнешнихОбработок);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//PathRepository - Путь репозитория
//NameDB - Имя информационной базы
//UsrLogin1c - Имя пользователя 1с
//UsrPswd1c - Пароль пользователя 1с
//PathServer1c - Путь к серверу
//NumberPlatform - Номер версии платформы 1с
//TypeDB - Тип СУБД
//UsrLoginDB - Имя пользователя СУБД
//UsrPswdDB - Пароль пользователя СУБД
//PathServerDB - Путь к серверу СУБД
//TextCommit - Текст коммита
//Репозиторий - Ссылка на Гит лаб
//TokenConnectionGitLab - Токен подключения к гитлаб
//IdProject - ИД проекта Гит лаб (отдельно ВМС, отдельно ЕРП, отдельно ТМС)// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаЗаявкаНаСлияние(ПараметрыБазы, НастройкиПользователя, ДополнительныеПараметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("CreateMergeRequest");
	
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--UrlRemoteRepository", ПараметрыБазы.Репозиторий);
	ДобавитьОпцию(КомандаЗапуска, "--TokenConnectionGitLab", НастройкиПользователя.ТокенGit);
	ДобавитьОпцию(КомандаЗапуска, "--IdProject", ПараметрыБазы.ИДПроектаРепозитория);

	Если ЗначениеЗаполнено(НастройкиПользователя.IDПользователяGit) Тогда
		ДобавитьОпцию(КомандаЗапуска, "--IdUserGitlab", НастройкиПользователя.IDПользователяGit);
	КонецЕсли;
	
	ДобавитьОпцию(КомандаЗапуска, "--TextMR", ДополнительныеПараметры.ТекстМерджРеквеста);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//PathRepository - Путь репозитория
//NameDB - Имя информационной базы
//UsrLogin1c - Имя пользователя 1с
//UsrPswd1c - Пароль пользователя 1с
//PathServer1c - Путь к серверу
//NumberPlatform - Номер версии платформы 1с
//TypeDB - Тип СУБД
//UsrLoginDB - Имя пользователя СУБД
//UsrPswdDB - Пароль пользователя СУБД
//PathServerDB - Путь к серверу СУБД
//TextCommit - Текст коммита
//Репозиторий - Ссылка на Гит лаб
//TokenConnectionGitLab - Токен подключения к гитлаб
//IdProject - ИД проекта Гит лаб (отдельно ВМС, отдельно ЕРП, отдельно ТМС)// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаЗаявкаНаСлияниеGitHub(ПараметрыБазы, НастройкиПользователя, ДополнительныеПараметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("gh");
	КомандаЗапуска.Добавить("pr");
	КомандаЗапуска.Добавить("create");
	
	ДобавитьОпцию(КомандаЗапуска, "--base", "develop");
	ДобавитьОпцию(КомандаЗапуска, "--head", ДополнительныеПараметры.ИмяВетки);
	ДобавитьОпцию(КомандаЗапуска, "--title", ДополнительныеПараметры.ТекстМерджРеквеста);
	ДобавитьОпцию(КомандаЗапуска, "--body", ДополнительныеПараметры.ТекстМерджРеквеста);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска MakeDataProcessors
//	PathRepository - Путь репозитория
//	NewBranche - Новая ветка
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	NamesDataProcessors - Обработки через "," (запятая)
//	LoadDB - Загрузка базы из файлов (истина, ложь)
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаСоздатьНовуюОбработку() Экспорт

	ПараметрыКомандЗапуска = ПараметрыСеанса.ПараметрыКомандЗапуска;
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ПараметрыКомандЗапуска.oscript);
	КомандаЗапуска.Добавить("MakeDataProcessors");
	
	СписокАргументов = Новый Массив;
	СписокАргументов.Добавить("PathRepository");
	СписокАргументов.Добавить("PathRepositoryMain");
	СписокАргументов.Добавить("NamesDataProcessors");
	СписокАргументов.Добавить("CommitAuthor");
	
	ДобавитьКомандыЗапуска(КомандаЗапуска, СписокАргументов, ПараметрыКомандЗапуска);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	PathRepository - Путь репозитория
//	NewBranche - Новая ветка
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	NumberPlatform - Номер версии платформы 1с
//	TypeDB - Тип СУБД
//	UsrLoginDB - Имя пользователя СУБД
//	UsrPswdDB - Пароль пользователя СУБД
//	PathServerDB - Путь к серверу СУБД
//	RunRas - Запускать РАС
//	NamesDataProcessors - Обработки через "," (запятая)
//	LoadDB - Загрузка базы из файлов (истина, ложь)
//	MethodLoadDB - ibcmd / designer
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаОбновитьОбработкиВБазах(ПараметрыБазы, СписокБазНаОбновление, СписокОбновляемыхОбработок) Экспорт
	
	ОбщегоНазначенияКлиентСервер.Проверить(Не ПараметрыБазы.ЭтоРабочаяБаза, "Недопустимо использование скрипта в Рабочей базе!");
		
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("UpdateDataProcessors");
	
	ДобавитьОпцию(КомандаЗапуска, "--PathRepository", ПараметрыБазы.КаталогБазы);
	
	//ПараметрыБазы
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--NumberPlatform", ПараметрыБазы.НомерВерсииПлатформы);
	ДобавитьОпцию(КомандаЗапуска, "--TypeDB", ПараметрыБазы.ТипSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLoginDB", ПараметрыБазы.ЛогинSQL);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswdDB", ПараметрыБазы.ПарольSQL);
	ДобавитьОпцию(КомандаЗапуска, "--PathServerDB", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--RunRas", "false");	
	ДобавитьОпцию(КомандаЗапуска, "--MethodLoadDB", Строка(ПараметрыБазы.РежимРаботыКонфигурации));
	ДобавитьОпцию(КомандаЗапуска, "--NamesDataProcessors", СписокОбновляемыхОбработок);
	ДобавитьОпцию(КомандаЗапуска, "--NamesUpdateDB", СписокБазНаОбновление);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	Auth - Признак аутентификации
//
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаЗаблокироватьБазу(ПараметрыБазы, Релиз) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("block");
	
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	ДобавитьОпцию(КомандаЗапуска, "--AccessCode", "Обновление");
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//	NameDB - Имя информационной базы
//	UsrLogin1c - Имя пользователя 1с
//	UsrPswd1c - Пароль пользователя 1с
//	PathServer1с - Путь к серверу 1с
//	Auth - Признак аутентификации
//
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаПингБазы(ПараметрыБазы) Экспорт
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить("oscript");
	КомандаЗапуска.Добавить(ФайлЗапускаOscript(ПараметрыБазы));
	КомандаЗапуска.Добавить("scorpion");
	
	ДобавитьОпцию(КомандаЗапуска, "--NameDB", ПараметрыБазы.ИмяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrLogin1c", ПараметрыБазы.ИмяПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--UsrPswd1c", ПараметрыБазы.ПарольПользователяИнформационнойБазы);
	ДобавитьОпцию(КомандаЗапуска, "--PathServer1с", ПараметрыБазы.КластерСерверов);
	
	ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции

// Функция - Формирование строки запуска
//
// Возвращаемое значение:
//   - 
//
Функция НовыйКомандаЗапуститьПайплайнДженкинс(ПараметрыБазы) Экспорт

	ЮрлЗапускаJob = СтрШаблон("%1/job/%2/buildWithParameters",
		ПараметрыБазы.URLJenkins,
		ПараметрыБазы.ИмяJobJenkins
	);	
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить(ЮрлЗапускаJob);
	
	КомандаЗапуска = СтрСоединить(КомандаЗапуска, " ");
	КомандаЗапуска = ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);		
	
	Возврат КомандаЗапуска
	
КонецФункции
#КонецОбласти

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьКомандыЗапуска(КомандаЗапуска, СписокАргументов, ПараметрыКомандЗапуска)

	Для Каждого Элемент Из СписокАргументов Цикл
		ДобавитьОпцию(КомандаЗапуска, СтрШаблон("--%1", Элемент), ПараметрыКомандЗапуска[Элемент]);
	КонецЦикла;
	
КонецПроцедуры

// Процедура - Обернуть опции команды в равно
//
// Параметры:
//  КомандаЗапуска	 - Массив	 - Массив команд  
//
Функция ОбернутьОпцииКомандыВЗнакРавно(КомандаЗапуска)
	
	Для ИндексМассива = 2 По КомандаЗапуска.ВГраница() Цикл
		
		Опция = КомандаЗапуска[ИндексМассива]; 
		
		Если ЭтоЗаголовокОпцииКоманднойСтроки(Опция) Тогда
			Продолжить;
		КонецЕсли;
		
		КомандаЗапуска[ИндексМассива] = СтрШаблон("%1", Опция);
		
	КонецЦикла;
	
	Возврат КомандаЗапуска;
	
КонецФункции

Процедура ДобавитьОпцию(КомандаЗапуска, Опция, Значение)

	Если ЗначениеЗаполнено(Значение) Тогда
		КомандаЗапуска.Добавить(Опция);
		КомандаЗапуска.Добавить("""" + Значение + """");
	КонецЕсли;
	
КонецПроцедуры

Функция ФайлЗапускаOscript(ПараметрыБазы) Экспорт
	
	Возврат СтрШаблон("%1\main.os", ПараметрыБазы.КаталогDevops);
	
КонецФункции

Функция ЭтоЗаголовокОпцииКоманднойСтроки(Опция)
	Возврат Лев(Опция, 2) = "--";
КонецФункции

Функция НовыйПараметрыЗадачи() Экспорт
	
	ПараметрыЗадачи = Новый Структура;
	ПараметрыЗадачи.Вставить("ИмяВетки",                 РаботаСGit.ИмяВеткиDev());
	ПараметрыЗадачи.Вставить("ОбновитьКонфИзХранилища",  "true");
	ПараметрыЗадачи.Вставить("ДорабатыватьКонфигурацию", "false");
	ПараметрыЗадачи.Вставить("ВнешниеФайлы",             "");
	ПараметрыЗадачи.Вставить("Расширения",               "");
	
	Возврат ПараметрыЗадачи;
	
КонецФункции

#КонецОбласти
