#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	Поля.Добавить("НомерРелиза");
 	Поля.Добавить("Проект");
 	Поля.Добавить("Дата");
 	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	Представление = СтрШаблон(Нстр("ru = '%1, релиз: %2 от %3'"), 
		Данные.Проект, Данные.НомерРелиза, Формат(Данные.Дата, "ДФ=dd.MM.yyyy"));
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти	

#Область ПрограммныйИнтерфейс

Функция СоздатьДокументРелиза(ДанныеЗаполнения) Экспорт
	
	Документ = СоздатьДокумент();
	Документ.Заполнить(ДанныеЗаполнения);
	Если Не Документ.ПроверитьЗаполнение() Тогда
		ПредставлениеОшибки = "";
		МассивСообщений = ПолучитьСообщенияПользователю(Истина);
		Для Каждого СообщениеПользователю Из МассивСообщений Цикл
			ПредставлениеОшибки = ПредставлениеОшибки + СообщениеПользователю.Текст + Символы.ПС;
		КонецЦикла;
		
		ВызватьИсключение ПредставлениеОшибки;
	КонецЕсли;

	Попытка
		Документ.Записать(РежимЗаписиДокумента.Проведение);		
	Исключение
		Документ.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	Возврат Документ.Ссылка;
	
КонецФункции

Функция НовыйДанныеЗаполнения() Экспорт
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Проект", Справочники.Проекты.ПустаяСсылка());
	ДанныеЗаполнения.Вставить("НомерРелиза", "");
	ДанныеЗаполнения.Вставить("База", Справочники.Базы.ПустаяСсылка());
	ДанныеЗаполнения.Вставить("Дата", ТекущаяДата());
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Функция ПоследнийДокумент(Проект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Релиз.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Релиз КАК Релиз
	|ГДЕ
	|	Релиз.Проект = &Проект
	|	И НЕ Релиз.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Релиз.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ПустаяСсылка();
	
КонецФункции

Процедура ОтправитьПисьмоПоРелизу(Релиз) Экспорт
	
	Шаблон = ШаблонПисьмаВыпускРелиза();
	Предмет = Релиз;
	УникальныйИдентификатор = Новый УникальныйИдентификатор();
	
	УчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина, Ложь);
	
	ДополнительныеПараметры = ШаблоныСообщений.ПараметрыОтправкиПисьмаПоШаблону();
	ДополнительныеПараметры.ОтправитьСразу = Истина;
	ДополнительныеПараметры.УчетнаяЗапись = УчетныеЗаписи[0].Ссылка;
	
	Результат = ШаблоныСообщений.СформироватьСообщениеИОтправить(Шаблон, Предмет, УникальныйИдентификатор, ДополнительныеПараметры);

КонецПроцедуры

#Область СтандартныеПодсистемы_ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
	Для Каждого Элемент Из Сообщение.ЗначенияРеквизитов Цикл
		Сообщение.ЗначенияРеквизитов[Элемент.Ключ] = ПредметСообщения[Элемент.Ключ];
	КонецЦикла;
	ВнешниеОбработкиРелиза = ВнешниеОбработкиРелиза(ПредметСообщения);
	ТаблицаХТМЛ = РаботаСПочтой.ТаблицаЗначенийВТаблицуХТМЛ(ВнешниеОбработкиРелиза);
	
	Сообщение.ЗначенияРеквизитов["База"] = ТаблицаХТМЛ;
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт

КонецПроцедуры

// Заполняет список получателей почты при отправке сообщения сформированного по шаблону.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Получить партнера и контактных лиц сделки.
//
// Параметры:
//  Ссылка  - ДокументСсылка.Релиз - документ, контакты которого необходимо получить.
//
// Возвращаемое значение:
//   Массив   - массив, содержащий контакты документа.
// 
Функция ПолучитьКонтакты(Ссылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоКонтактам();
	Запрос.УстановитьПараметр("Предмет", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;

	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Контакт");
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ШаблонПисьмаВыпускРелиза()
	
	Возврат Справочники.ШаблоныСообщений.НайтиПоНаименованию("ВыпускРелиза");
	
КонецФункции

// Возвращает текст запроса по контактам взаимодействий, содержащимся в документе.
//
// Возвращаемое значение:
//   Строка
//
Функция ТекстЗапросаПоКонтактам() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ГруппыПользователейСостав.Пользователь КАК Контакт
	|ИЗ
	|	Документ.Релиз КАК Релиз
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|		ПО Релиз.Рассылка = ГруппыПользователейСостав.Ссылка
	|ГДЕ
	|	Релиз.Ссылка = &Предмет";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВнешниеОбработкиРелиза(Релиз)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РелизОбъектыРазработки.ОбъектРазработки КАК ОбъектРазработки,
	|	РелизОбъектыРазработки.ВерсияОбъектаРазработки КАК ВерсияОбъектаРазработки
	|ИЗ
	|	Документ.Релиз.ОбъектыРазработки КАК РелизОбъектыРазработки
	|ГДЕ
	|	РелизОбъектыРазработки.Ссылка = &Релиз";
	
	Запрос.УстановитьПараметр("Релиз", Релиз);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
