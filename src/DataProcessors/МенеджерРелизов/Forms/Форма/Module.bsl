#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьРабочиеБазы = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КопироватьДанныеФормы(ВладелецФормы.Объект, Объект);
	
	Проект = ПроектОтБазы(Объект.БазаСборкиРелиза);
	УстановитьНастройкиДинамическихСписков();
	
	ИнициализироватьВкладкуСборкаРелиза();
	ИнициализироватьВкладкуТочечноеОбновлениеВБЛ();
	ИнициализироватьВкладкуОбновлениеБазы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьРабочиеБазыПриИзменении(Элемент)
	УстановитьНастройкиДинамическихСписков();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СсылкаКаталогРелизаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(СсылкаКаталогРелиза);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеестрОбъектовРазработки

&НаКлиенте
Процедура РеестрОбъектовРазработкиВРелизПриИзменении(Элемент)
	
	ТекущиеДанныеБазы = Элементы.ОбновлениеБазыРабочиеБазы.ТекущиеДанные;
	ТекущиеДанныеОбъектаРазработки = Элементы.РеестрОбъектовРазработки.ТекущиеДанные;
	ВыделенныеСтроки = Элементы.РеестрОбъектовРазработки.ВыделенныеСтроки;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.РеестрОбъектовРазработки.ДанныеСтроки(ВыделеннаяСтрока);
		ДанныеСтроки.ВРелиз = ТекущиеДанныеОбъектаРазработки.ВРелиз;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РеестрОбъектовРазработкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РеестрОбъектовРазработкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбновлениеБазыРабочиеБазы

&НаКлиенте
Процедура ОбновлениеБазыРабочиеБазыПриАктивизацииСтроки(Элемент)

	ПодключитьОбработчикОжидания("ЗаполнитьРеестрОбъектовРазработки", 0.2, Истина);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СобратьРелиз(Команда)
	
	ПроверитьЗаполнение();
	
	ПараметрыБазы           = НастройкиБазы(Объект.БазаСборкиРелиза);

	СписокОбновляемыхОбработок = ФорматированныйСписокОбработок(Объект.Релиз);
	КомандаЗапуска  = КомандыЗапускаПриложения.НовыйКомандаСборкиРелиза(ПараметрыБазы, Объект.Релиз, СписокОбновляемыхОбработок);
	
	База = Объект.БазаСборкиРелиза;
	
	ЗапускПриложения(КомандаЗапуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаСсылкаНаПоследнийРелизНажатие(Элемент)
	ПоказатьЗначение(, Объект.Релиз);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗарегистрироватьНовыйРелиз(Команда)

	ОткрытьФорму("Обработка.РегистрацияРелиза.Форма");

	//ТекстНомерРелиза = "";
	//
	//Обещание = ВвестиСтрокуАсинх(ТекстНомерРелиза, НСтр("ru='Введите номер релиза'"));
	//ТекстНомерРелиза = Ждать Обещание;
	//Если ЗначениеЗаполнено(ТекстНомерРелиза) Тогда
	//	СоздатьДокументРелизаНаСервере(ТекстНомерРелиза);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыделенныеОбработки(Команда)

	ПроверитьЗаполнение();
	
	СписокБазНаОбновление = МассивВыделенныхРабочихБаз();
	СписокОбновляемыхОбработок = МассивВыделенныхОбработок();

	Если СписокБазНаОбновление.Количество() = 0 Или СписокОбновляемыхОбработок.Количество() = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выделите необходимые базы к обновлению и необходимые обработки!'"));
		Возврат;
	КонецЕсли;	
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновлениеВыделенныхОбработок", ЭтаФорма, Неопределено);
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Обновить обработки:%1%2%3%4В рабочих базах:%5%6?'"),
	    Символы.ПС,
		СтрСоединить(СписокОбновляемыхОбработок, Символы.ПС),
		Символы.ПС,
		Символы.ПС,
		Символы.ПС,
		СтрСоединить(СписокБазНаОбновление, Символы.ПС));
		
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Обновление обработок в РБД из девелопа'"));
			
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьКнопкиОсобогоКонтроля(Команда)
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("АктивироватьКнопкиОсобогоКонтроляПослеВопроса", ЭтаФорма, Неопределено);
	ТекстСообщения = "Активация кнопок особого контроля предоставляет возможность работы с рабочими базами данных.
					|Не рекомендуется активировать кнопки, если манипуляций с рабочими базами данных сейчас не планируются,
					|поскольку это чревато возможными ошибками в рабочих базах, и в следствии - сбоем.
					|
					|Активировать кнопки особого контроля?";
		
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Предупреждение'"));	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьВыбор(Команда)
	
	ТекущиеДанныеБазы = Элементы.ОбновлениеБазыРабочиеБазы.ТекущиеДанные;
	
	Для Каждого СтрокаОбъектаРазработки Из РеестрОбъектовРазработки Цикл
		
		РеестрОбъектовРазработкиВРелизПриИзмененииНаСервере(ТекущиеДанныеБазы.Ссылка, СтрокаОбъектаРазработки.ОбъектРазработки,
			СтрокаОбъектаРазработки.ВРелиз);
			
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОповещение(Команда)
	ОтправитьОповещениеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьРабочуюБазу(Команда)
	
	ПроверитьЗаполнение();
	
	РабочаяБаза = Элементы.ОбновлениеБазыРабочиеБазы.ТекущиеДанные.Ссылка;
	ТекстСообщения = СтрШаблон("Вы уверены, что хотите заблокировать базу %1?", РабочаяБаза);
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ЗаблокироватьРабочуюБазуПослеВопроса", ЭтаФорма, РабочаяБаза);
	
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Блокировка рабочей базы'"));	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРабочуюБазу(Команда)
	
	ПроверитьЗаполнение();

	РабочаяБаза = Элементы.ОбновлениеБазыРабочиеБазы.ТекущиеДанные.Ссылка;
	ТекстСообщения = СтрШаблон("Вы уверены, что хотите обновить базу %1?", РабочаяБаза);
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьРабочуюБазуПослеВопроса", ЭтаФорма, РабочаяБаза);
	
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Обновление рабочей базы'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОбработки(Команда)
	
	ПроверитьЗаполнение();

	РабочаяБаза = Элементы.ОбновлениеБазыРабочиеБазы.ТекущиеДанные.Ссылка;
	ТекстСообщения = СтрШаблон("Вы уверены, что хотите обновить обработки в рабочей базе %1 и разблокировать базу?", РабочаяБаза);
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьОбработкиВРабочейБазеПослеВопроса", ЭтаФорма, РабочаяБаза);
	
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Обновление рабочей базы'"));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьРабочуюБазуПослеВопроса(Результат, РабочаяБаза) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыБазы  = НастройкиБазы(РабочаяБаза);
	КомандаЗапуска  = КомандыЗапускаПриложения.НовыйКомандаПлановоеОбновлениеБазы(ПараметрыБазы, Объект.Релиз);
	
	База = РабочаяБаза;
	
	ЗапускПриложения(КомандаЗапуска);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОбработкиВРабочейБазеПослеВопроса(Результат, РабочаяБаза) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыБазы  = НастройкиБазы(РабочаяБаза);		
	СписокОбновляемыхОбработок = СписокОбновляемыхОбработокПлановыйРелиз();
	РаботаСОбъектамиВызовСервера.ФорматироватьСписокОбновляемыхОбработок(СписокОбновляемыхОбработок);
	КомандаЗапуска  = КомандыЗапускаПриложения.НовыйКомандаПлановоеОбновлениеБазыОбработки(ПараметрыБазы, Объект.Релиз, СписокОбновляемыхОбработок);
	
	База = РабочаяБаза;
	
	ЗапускПриложения(КомандаЗапуска);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьРабочуюБазуПослеВопроса(Результат, РабочаяБаза) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыБазы = НастройкиБазы(РабочаяБаза);
	КомандаЗапуска = КомандыЗапускаПриложения.НовыйКомандаЗаблокироватьБазу(ПараметрыБазы, Объект.Релиз);
	
	База = РабочаяБаза;
		
	ЗапускПриложения(КомандаЗапуска);	
	
КонецПроцедуры

&НаСервере
Функция СписокОбновляемыхОбработокПлановыйРелиз()

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ВРелиз", Истина);
	
	СписокОбновляемыхОбработок = РеестрОбъектовРазработки.Выгрузить().Скопировать(ПараметрыОтбора).ВыгрузитьКолонку(
		"ОбъектРазработки");
	
	Возврат СписокОбновляемыхОбработок;

КонецФункции

&НаКлиенте
Процедура УстановитьНастройкиДинамическихСписков()
	
	Если ПоказыватьРабочиеБазы Тогда
		ТипБазы = ПредопределенноеЗначение("Перечисление.ТипыБаз.РабочаяБаза");
	Иначе
		ТипБазы = ПредопределенноеЗначение("Перечисление.ТипыБаз.ТестоваяБаза");
	КонецЕсли;
	
	РабочиеБазы.Параметры.УстановитьЗначениеПараметра("ТипБазы", ТипБазы);
	РабочиеБазы.Параметры.УстановитьЗначениеПараметра("Проект", Проект);
	СписокОбработок.Параметры.УстановитьЗначениеПараметра("Проект", Проект);
	
	Элементы.РабочиеБазы.Обновить();
	Элементы.СписокОбработок.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроектОтБазы(База)	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(База, "Владелец");
КонецФункции

&НаКлиенте
Процедура ОбновлениеВыделенныхОбработок(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	ПараметрыБазы           = НастройкиБазы(Объект.БазаСборкиРелиза);
	КаталогРепозиторияБазы  = РаботаСGit.КаталогРепозиторияБазы(Объект.БазаСборкиРелиза);
	СписокБазНаОбновление = МассивВыделенныхРабочихБаз();
	СписокОбновляемыхОбработок = МассивВыделенныхОбработок();

	ФорматироватьСписокБазВКоманднуюСтроку(СписокБазНаОбновление);
	РаботаСОбъектамиВызовСервера.ФорматироватьСписокОбновляемыхОбработок(СписокОбновляемыхОбработок);
	
	КомандаЗапуска  = КомандыЗапускаПриложения.НовыйКомандаОбновитьОбработкиВБазах(ПараметрыБазы,
		СписокБазНаОбновление, СписокОбновляемыхОбработок);
		
	База = Объект.БазаСборкиРелиза;

	ЗапускПриложения(КомандаЗапуска);

КонецПроцедуры

&НаСервере
Функция ВыводЛоговНаСервере()
	
	ДанныеЛогов = СтратегияЗапускаСкриптов.ДанныеЛоговБезОжидания(ПараметрыЗапуска);
	
	ЛогиПодробные = ДанныеЛогов.ПодробныйЛогСтрокой;
	Логи          = ДанныеЛогов.КраткийЛогСтрокой;
	Индикатор     = ДанныеЛогов.Индикатор;
	
	Элементы.СтатусВыполнения.Заголовок = ДанныеЛогов.СтатусВыполнения;
	
	Если Не ДанныеЛогов.Выполнено Тогда
		Возврат Истина;
	КонецЕсли;
	
	ДанныеЛогов.СтатусВыполнения = СтрШаблон(НСтр("ru = 'Завешено - %1'"), БазовыйТекстСообщения);
	Возврат Ложь;

КонецФункции

&НаКлиенте
Процедура ВыводЛогов() Экспорт

	Если ВыводЛоговНаСервере() Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВременныеФайлы();
	ОтключитьОбработчикОжидания("ВыводЛогов");
	Индикатор = 100;
	Элементы.СтатусВыполнения.Заголовок = ДанныеЛогов.СтатусВыполнения;
	ВыполняетсяПакетноеЗадание = Ложь;
	ИнициализироватьЗначенияФормы();
	ОбновитьСсылкуНаПоследнийРелиз();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВременныеФайлы()
	
	РаботаСЛогами.УдалитьВременныеФайлы(ДанныеЛогов);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьЗначенияФормы(ПервыйЗапуск = Ложь)

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВкладкуСборкаРелиза()
	ОбновитьСсылкуНаПоследнийРелиз();	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВкладкуТочечноеОбновлениеВБЛ()

КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьВкладкуОбновлениеБазы()
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеестрОбъектовРазработкиНаСервере(База)
	
	РеестрОбъектовРазработки.Очистить();
	ОбъектыРазработки = Документы.Релиз
		.ПоследнийДокумент(Объект.БазаСборкиРелиза.Владелец)
		.ОбъектыРазработки.Выгрузить();
		
	РеестрОбъектовРазработки.Загрузить(ОбъектыРазработки);
	
	ОбъектыРазработкиИсключенияНаРеализацию = РегистрыСведений.РеестрОбъектовРазработкиИсключенияНаРеализацию.ОбъектыРазработкиПоБазе(
		База);
		
	Для Каждого СтрокаОбъектРазработки Из РеестрОбъектовРазработки Цикл
		
		ИсключаемыйОбъектРазработки = ОбъектыРазработкиИсключенияНаРеализацию.Найти(СтрокаОбъектРазработки.ОбъектРазработки);
		Если ИсключаемыйОбъектРазработки = Неопределено Тогда
			СтрокаОбъектРазработки.ВРелиз = Истина;
		Иначе
			СтрокаОбъектРазработки.ВРелиз = Ложь;
		КонецЕсли;	
		
	КонецЦикла;
	
	РеестрОбъектовРазработки.Сортировать("ОбъектРазработки");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеестрОбъектовРазработки() Экспорт
	
	РеестрОбъектовРазработки.Очистить();
	ТекущиеДанныеБазы = Элементы.ОбновлениеБазыРабочиеБазы.ТекущиеДанные;
	ЗаполнитьРеестрОбъектовРазработкиНаСервере(ТекущиеДанныеБазы.Ссылка);
	ЭтаФорма.Заголовок = СтрШаблон("Обновление: %1", Строка(ТекущиеДанныеБазы.Ссылка));
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокРабочихБаз()

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбработки(Команда)
	Элементы.ГруппаОбновлениеОбработок.Видимость = Не Элементы.ГруппаОбновлениеОбработок.Видимость;
КонецПроцедуры

&НаКлиенте
Функция МассивВыделенныхРабочихБаз()	
	
	ВыделенныеСтроки = Элементы.РабочиеБазы.ВыделенныеСтроки;
	МассивБаз = Новый Массив;
	
	Для Каждого СтрокаРабочейБазы Из ВыделенныеСтроки Цикл	
		ДанныеСтроки = Элементы.РабочиеБазы.ДанныеСтроки(СтрокаРабочейБазы);	
		МассивБаз.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	Возврат МассивБаз;
	
КонецФункции

&НаКлиенте
Функция МассивВыделенныхОбработок()	
	
	ВыделенныеСтроки = Элементы.СписокОбработок.ВыделенныеСтроки;
	МассивОбработок = Новый Массив;
	
	Для Каждого СтрокаОбработки Из ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.СписокОбработок.ДанныеСтроки(СтрокаОбработки);
		МассивОбработок.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	Возврат МассивОбработок;
	
КонецФункции

&НаСервере
Процедура РеестрОбъектовРазработкиВРелизПриИзмененииНаСервере(База, ОбъектРазработки, ВРелиз)
	
	ДанныеЗаполненияРеестраОбъектовРазработки = ДанныеЗаполненияРеестраОбъектовРазработки(База,
		ОбъектРазработки);
		
	ЗафиксироватьДанныеВРеестреОбъектовРазработки(ДанныеЗаполненияРеестраОбъектовРазработки, ВРелиз);
		
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьДанныеВРеестреОбъектовРазработки(ДанныеЗаполненияРеестраОбъектовРазработки, ВРелиз)
		
	Если ВРелиз Тогда
		РегистрыСведений.РеестрОбъектовРазработкиИсключенияНаРеализацию.УдалитьЗапись(ДанныеЗаполненияРеестраОбъектовРазработки);	
	Иначе
		РегистрыСведений.РеестрОбъектовРазработкиИсключенияНаРеализацию.ДобавитьЗапись(ДанныеЗаполненияРеестраОбъектовРазработки);
	КонецЕсли

КонецПроцедуры

&НаСервере
Функция ДанныеЗаполненияРеестраОбъектовРазработки(База, ОбъектРазработки)
	
	ДанныеЗаполнения = РегистрыСведений.РеестрОбъектовРазработкиИсключенияНаРеализацию.НовыйДанныеЗаполнения();
	ДанныеЗаполнения.База = База;
	ДанныеЗаполнения.ОбъектРазработки = ОбъектРазработки;
	Возврат ДанныеЗаполнения;

КонецФункции

&НаКлиенте
Процедура АктивироватьКнопки()
	
	КнопкиКАктивации = КнопкиОсобогоКонтроля();
	
	Для Каждого КнопкаКАктивации Из КнопкиКАктивации Цикл
		КнопкаКАктивации.Доступность = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция КнопкиОсобогоКонтроля()
	
	КнопкиОсобогоКонтроля = Новый Массив;
	КнопкиОсобогоКонтроля.Добавить(Элементы.СобратьРелиз);
	КнопкиОсобогоКонтроля.Добавить(Элементы.ЗаблокироватьРабочуюБазу);
	КнопкиОсобогоКонтроля.Добавить(Элементы.РабочиеБазыОбновитьРабочуюБазу);
	КнопкиОсобогоКонтроля.Добавить(Элементы.ОбновитьВыделенныеОбработки);
	КнопкиОсобогоКонтроля.Добавить(Элементы.СправочникБазыОткрытьПриложение);
    КнопкиОсобогоКонтроля.Добавить(Элементы.ОбновитьОбработки);
	
	Возврат КнопкиОсобогоКонтроля;
	
КонецФункции

&НаКлиенте
Процедура АктивироватьКнопкиОсобогоКонтроляПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	АктивироватьКнопки();
	
КонецПроцедуры

&НаСервере
Процедура ФорматироватьСписокБазВКоманднуюСтроку(СписокБазНаОбновление)
	
	ДанныеБаз = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокБазНаОбновление, 
		"КластерСерверов, ИмяПользователяИнформационнойБазы, ПарольПользователяИнформационнойБазы, БазаПубликации");
	
	ШаблонСтроки = "%1$%2$%3$%4";

	МассивСтрокБаз = Новый Массив;
	Для Каждого ОбновляемаяБаза Из ДанныеБаз Цикл
		СтрокаБазы = СтрШаблон(ШаблонСтроки, 
			ОбновляемаяБаза.Значение.КластерСерверов.СерверПубликации,
			ОбновляемаяБаза.Значение.БазаПубликации,
			ОбновляемаяБаза.Значение.ИмяПользователяИнформационнойБазы,
			ОбновляемаяБаза.Значение.ПарольПользователяИнформационнойБазы);
			
		 МассивСтрокБаз.Добавить(СтрокаБазы);
	КонецЦикла;
	
	СписокБазНаОбновление = СтрСоединить(МассивСтрокБаз, ",");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументРелизаНаСервере(ТекстНомерРелиза)
	
	ДанныеЗаполнения = Документы.Релиз.НовыйДанныеЗаполнения();
	ДанныеЗаполнения.Проект = Проект;
	ДанныеЗаполнения.База = Объект.БазаСборкиРелиза;
	ДанныеЗаполнения.НомерРелиза = ТекстНомерРелиза;
	Документы.Релиз.СоздатьДокументРелиза(ДанныеЗаполнения);
	
	ОбновитьСсылкуНаПоследнийРелиз();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСсылкуНаПоследнийРелиз()
	
	Объект.Релиз = Документы.Релиз.ПоследнийДокумент(Проект);
	Элементы.ГиперссылкаСсылкаНаПоследнийРелиз.Заголовок = Объект.Релиз;
	
	КаталогСборкиРелиза = Объект.БазаСборкиРелиза.Владелец.КаталогСборкиРелиза;
    НомерРелиза = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Релиз, "НомерРелиза");
	
	Если ЗначениеЗаполнено(Объект.Релиз) Тогда
		СсылкаКаталогРелиза = СтрШаблон("%1\%2", КаталогСборкиРелиза, НомерРелиза);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускПриложения(КомандаЗапуска)
	
	Если Не ПроверитьЗаполнение() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не все обязательные реквизиты заполнены'"));
		Возврат;
	КонецЕсли;
	ВыполняетсяПакетноеЗадание = Истина;
	УстановитьДоступностьЭлементов();
	Логи          = "";
	ЛогиПодробные = "";
		
	ЗапускПриложенияНаСервере(КомандаЗапуска);
	ПодключитьОбработчикОжидания("ВыводЛогов", 2);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()

КонецПроцедуры

&НаСервере
Процедура ЗапускПриложенияНаСервере(КомандаЗапуска)
	
	Индикатор = 0;
	Элементы.СтатусВыполнения.Заголовок = СтрШаблон(НСтр("ru = 'Начало - %1'"), БазовыйТекстСообщения);
	
	ПараметрыЗапуска = СтратегияЗапускаСкриптов.ПодготовкаПараметровИЗапускПриложения(База, КомандаЗапуска);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиБазы(База)
	
	Возврат РаботаСGitAPIПовтИсп.НастройкиБазы(База);
	
КонецФункции

&НаСервере
Процедура ОтправитьОповещениеНаСервере()
	Документы.Релиз.ОтправитьПисьмоПоРелизу(Объект.Релиз)
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокОбработок(Релиз)
	Возврат Релиз.ОбъектыРазработки.ВыгрузитьКолонку("ОбъектРазработки");
КонецФункции

&НаСервереБезКонтекста
Функция ФорматированныйСписокОбработок(Релиз)
	
	СписокОбновляемыхОбработок = СписокОбработок(Релиз);
	РаботаСОбъектами.ФорматироватьСписокОбновляемыхОбработок(СписокОбновляемыхОбработок);
	Возврат СписокОбновляемыхОбработок;
	
КонецФункции

#КонецОбласти
