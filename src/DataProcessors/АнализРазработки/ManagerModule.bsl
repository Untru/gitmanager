// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПечатьВсеЗадачи(Знач ВсеЗадачи, Знач СводнаяТаблицаХраненияДанных, ТаблицаАпрувов) Экспорт 
	
	Результат = Новый ТабличныйДокумент;

	Макет = ПолучитьМакет("ПечатьВсеЗадачи");
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаОтчета");
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОтчета");

	Результат.Вывести(ОбластьШапка);
	
	РеквизитыЗадачи = "НомерЗадачи, НомерЗадачиБазовой, Наименование, Ответственный, ПрефиксВетки";
	ДанныеЗадач = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВсеЗадачи, РеквизитыЗадачи); 
	
	Для Каждого ТекущаяЗадача Из ВсеЗадачи Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Задача", ТекущаяЗадача);
		ПараметрыОтбора.Вставить("СтатусМерджРеквеста", "merged");
		
		СтрокиСводнойТаблицы = СводнаяТаблицаХраненияДанных.НайтиСтроки(ПараметрыОтбора); 
		Если СтрокиСводнойТаблицы.Количество() = 0 Тогда // задачи без merged не попадают
			Продолжить;
		КонецЕсли;
		
		Одобрили = Новый Массив;
		
		Для Каждого СтрокаСводнойТаблицы Из СтрокиСводнойТаблицы Цикл
		
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("НомерМерджРеквеста", СтрокаСводнойТаблицы.НомерМерджРеквеста);
			
			СтрокиТаблицыАпрувов = ТаблицаАпрувов.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТаблицыАпрувов Из СтрокиТаблицыАпрувов Цикл
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Одобрили, СтрокаТаблицыАпрувов.Пользователь.ВыгрузитьЗначения(), Истина);
			КонецЦикла;

		КонецЦикла;
		
		ДанныеТекущейЗадачи = ДанныеЗадач[ТекущаяЗадача];
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ДанныеТекущейЗадачи);
		ОбластьСтрока.Параметры.Одобрили = СтрСоединить(Одобрили, ", ");  
		
		Результат.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Результат.АвтоМасштаб = Истина;
	Результат.ОтображатьЗаголовки = Истина;
	Результат.ОтображатьСетку = Ложь; 
	
	Возврат Результат;	
	
КонецФункции

#КонецЕсли