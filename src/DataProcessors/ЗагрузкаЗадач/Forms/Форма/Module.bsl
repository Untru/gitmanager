// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтатусыЗадачи.Добавить("2", "Ждет выполнения", Истина);
	СтатусыЗадачи.Добавить("3", "Выполняется", Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Очистить(Команда)

	Объект.ЗадачиБитрикс.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачи(Команда)
	СоздатьЗадачиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗадачи(Команда)
	ЗагрузитьЗадачиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗадачи(Команда)
	ОбновитьЗадачиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьЗадачиНаСервере()
	
	Объект.ЗадачиБитрикс.Очистить();
	
	Настройки = Справочники.НастройкиПользователей.НастройкиТекущегоПользователя(Ответственный);	
	
	ПараметрыЗапроса = Новый Соответствие;
	ПараметрыЗапроса.Вставить("RESPONSIBLE_ID", Число(Настройки.IDПользователяBitrix));
	
	МассивФильтров = Новый Массив;
	Для Каждого Статус Из СтатусыЗадачи Цикл
		Если Статус.Пометка Тогда
			МассивФильтров.Добавить(Статус.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыЗапроса.Вставить("REAL_STATUS", МассивФильтров);
	
	Ответ = OPI_Bitrix24.ПолучитьСписокЗадач(РаботаСBitrix.СсылкаBitrixПользователя(), ПараметрыЗапроса, НачальныйНомер);
	
	Если Ответ["result"] = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	СписокЗадач = Ответ["result"]["tasks"];
	
	Для Каждого Задача Из СписокЗадач Цикл
		
		НоваяСтрока = Объект.ЗадачиБитрикс.Добавить();
		НоваяСтрока.НомерБитрикс = Задача["id"];
		НоваяСтрока.Задача = Справочники.Задачи.НайтиПоРеквизиту("НомерЗадачи", Задача["id"])
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗадачиНаСервере()
	
	ОбновитьЗадачиНаСервере(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗадачиНаСервере(ПропускатьСуществующие = Истина)
	
	Для Каждого Задача Из Объект.ЗадачиБитрикс Цикл
		Если ЗначениеЗаполнено(Задача.Задача) И ПропускатьСуществующие Тогда
			Продолжить;	
		КонецЕсли;
		
		Попытка
			Справочники.Задачи.НоваяЗадача(Задача.НомерБитрикс);
			Сообщить("Загружена задача " + Задача.НомерБитрикс);
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ТекстОшибкиДляПользователя = ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке);
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(СтрШаблон("ru='Не удалось записать задачу %1
				|%2'", Задача.НомерБитрикс, ТекстОшибкиДляПользователя)
			);
			Сообщение.Сообщить();
			Сообщить(Задача.НомерБитрикс);
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти



