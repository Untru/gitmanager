// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	//СтатусЗадачи = Справочники.Задачи.СтатусЗадачи(Статус);
	
	Если Спринты.Количество() Тогда
		ОтсортированныеСпринты = ОбщегоНазначенияУправлениеРазработкой.СортироватьСсылкиПоРеквизитам(
				Спринты.Выгрузить().ВыгрузитьКолонку("Спринт"), "ДатаНачала УБЫВ"
		);
	КонецЕсли;
	Спринт = Справочники.Спринты.СпринтПоКрайнемуСроку(КрайнийСрок);
	НомерЗадачи = СокрЛП(НомерЗадачи);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограмныйИнтерфейс

Процедура ПоменятьСтатусыЗадачи(ДанныеЗаполнения) Экспорт

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Стадия, Статус, ПлановоеВремя, ЗатраченноеВремя, КрайнийСрок");
	Спринты.Загрузить(ДанныеЗаполнения.Спринты);
	
КонецПроцедуры

Процедура ПолучитьСписокТрудозатратЗадачи() Экспорт
	
	//todo тут этому не место, нужен адаптер
	//и разные интеграции
	//Ответ = РаботаСBitrix.ПолучитьСписокТрудозатратЗадачи(НомерЗадачи);
	//Трудозатраты = Ответ["result"];
	//Если Трудозатраты = Неопределено Тогда
	//	Возврат;	
	//КонецЕсли;
	//ФактическиеТрудозатраты.Очистить();
	//Для Каждого Строка Из Трудозатраты Цикл
	//	НоваяСтрока = ФактическиеТрудозатраты.Добавить();
	//	НоваяСтрока.ДатаНачала = ПрочитатьДатуJSON(Строка["CREATED_DATE"], ФорматДатыJSON.ISO);
	//	НоваяСтрока.ДатаОкончания = НоваяСтрока.ДатаНачала + Число(Строка["MINUTES"]) * 60;
	//	НоваяСтрока.ЗатраченноеВремя = Число(Строка["MINUTES"]);
	//	//НоваяСтрока.Ответственный = "USER_ID" //todo
	//КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения) Экспорт
	
	Код = ДанныеЗаполнения.НомерЗадачи;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	Если ДанныеЗаполнения.Свойство("Спринты") Тогда
		Спринты.Загрузить(ДанныеЗаполнения.Спринты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСвязанныеЗадачи() Экспорт

	СвязанныеЗадачи.Очистить();
	ЗадачиСтрокой = РаботаСBitrix.СвязанныеЗадачи(НомерЗадачи);
	
	Для Каждого Элемент Из ЗадачиСтрокой Цикл
		ЗадачаСсылка =  Справочники.Задачи.НоваяЗадача(Элемент);
		НоваяСтрока = СвязанныеЗадачи.Добавить();
		НоваяСтрока.Задача = ЗадачаСсылка;
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

#КонецЕсли
