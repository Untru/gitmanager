#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СоздатьОбработкиПоРепозиторию(НастройкиБазы) Экспорт
	
	КаталогРепозиторияБазы = НастройкиБазы.КаталогБазыШара;
	Если ПустаяСтрока(КаталогРепозиторияБазы) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан каталог репозитория базы!'"));
		Возврат;
	КонецЕсли;
	ВнешниеФайлы = РаботаСGit.ВнешниеФайлыСРепозитория(КаталогРепозиторияБазы);
	
	Для Каждого Элемент Из ВнешниеФайлы Цикл
		
		НайденнаяСсылка = НайтиПоНаименованию(Элемент.ИмяОбработки, Истина,,НастройкиБазы.Проект);
		Если НайденнаяСсылка.Пустая() Тогда
			ОбъектыРазработкиОбъект = СоздатьЭлемент();
			ОбъектыРазработкиОбъект.Владелец = НастройкиБазы.Проект;
			ОбъектыРазработкиОбъект.УстановитьНовыйКод();
			ОбъектыРазработкиОбъект.Наименование = Элемент.ИмяОбработки;
			ОбъектыРазработкиОбъект.ТипОбъектаРазработки = Элемент.ТипОбъектаРазработки;
		Иначе
			ОбъектыРазработкиОбъект = НайденнаяСсылка.ПолучитьОбъект();
		КонецЕсли;
		
		ОбъектыРазработкиОбъект.Версия = Элемент.НомерВерсии;
		Если ОбъектыРазработкиОбъект.ПроверитьЗаполнение() Тогда
			ОбъектыРазработкиОбъект.Записать();
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеПоПроекту(Проект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбъектыРазработки.Ссылка КАК ОбъектРазработки,
	|	ОбъектыРазработки.ТипОбъектаРазработки КАК ТипОбъектаРазработки,
	|	ОбъектыРазработки.Версия КАК Версия
	|ИЗ
	|	Справочник.ОбъектыРазработки КАК ОбъектыРазработки
	|ГДЕ
	|	ОбъектыРазработки.Владелец = &Проект
	|	И НЕ ОбъектыРазработки.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДобавитьВерсию(ОбъектыРазработки, Задача, Ответственный, Комментарий) Экспорт
	
	ОбработкаОбъект = ОбъектыРазработки.ПолучитьОбъект();
	//Не делаем Заблокировать(), так как считаем это действие важнее пользовательского	
	НовыйНомер = РасчитатьСледующуюВерсию(ОбработкаОбъект);
	СтрокаВерсии = ОбработкаОбъект.ИсторияВерсий.Добавить();
	СтрокаВерсии.ДатаВерсии = ТекущаяДатаСеанса();
	СтрокаВерсии.Задача = Задача;
	СтрокаВерсии.Ответственный = Ответственный;
	СтрокаВерсии.Комментарий   = Комментарий;
	СтрокаВерсии.НомерВерсии    = НовыйНомер;
	Если ОбработкаОбъект.ПроверитьЗаполнение() Тогда
		ОбработкаОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция РасчитатьСледующуюВерсию(ОбработкаОбъект)

	ФинальныйНомер = Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd");
	
	Если ОбработкаОбъект.ИсторияВерсий.Количество() = 0 Тогда
		Возврат ФинальныйНомер;
	КонецЕсли;
	
	НомерВерсии = ОбработкаОбъект.ИсторияВерсий[0].НомерВерсии;
	
	Если СтрДлина(НомерВерсии) > 8 И Лев(НомерВерсии, 8) = ФинальныйНомер Тогда
		НомерПодверсии = Число(Сред(НомерВерсии, 10, 1));
		СледующийНомер = НомерПодверсии + 1;
		ФинальныйНомер = Лев(НомерВерсии, 9) + СледующийНомер;
	ИначеЕсли НомерВерсии = ФинальныйНомер Тогда
		ФинальныйНомер = СтрШаблон("%1.1", ФинальныйНомер);
	КонецЕсли;
	
	Возврат ФинальныйНомер;
	
КонецФункции


#КонецОбласти

#КонецЕсли
