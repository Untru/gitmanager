// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция НастройкиТекущегоПользователя(ТекущийПользователь = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиПользователей.ТокенGit КАК ТокенGit,
	|	НастройкиПользователей.Проект КАК Проект,
	|	НастройкиПользователей.Ссылка КАК Настройка,
	|	НастройкиПользователей.ТокенBitrix КАК ТокенBitrix,
	|	НастройкиПользователей.ИмяПользователяGit КАК ИмяПользователяGit,
	|	НастройкиПользователей.ПочтаПользователяGit КАК ПочтаПользователяGit,
	|	НастройкиПользователей.КаталогРепозиторияНаШаре КАК КаталогРепозиторияНаШаре,
	|	НастройкиПользователей.IDПользователяBitrix КАК IDПользователяBitrix,
	|	ЕСТЬNULL(НастройкиПользователейТимЛид.IDПользователяGit, """") КАК IDПользователяGit,
	|	ЕСТЬNULL(НастройкиПользователейТимЛид.IDПользователяBitrix, """") КАК IDТимЛидBitrix
	|ИЗ
	|	Справочник.НастройкиПользователей КАК НастройкиПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиПользователей КАК НастройкиПользователейТимЛид
	|		ПО НастройкиПользователей.ТимЛид = НастройкиПользователейТимЛид.Владелец
	|ГДЕ
	|	НастройкиПользователей.Владелец = &ТекущийПользователь";
	
	Запрос.УстановитьПараметр("ТекущийПользователь", ?(ТекущийПользователь = Неопределено, ПараметрыСеанса.ТекущийПользователь, ТекущийПользователь));
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	Если ТаблицаРезультат.Количество() = 0 Тогда
		ТаблицаРезультат.Добавить();
	КонецЕсли;
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРезультат[0]);

КонецФункции

Функция ПользователиСАвтотрудозатратами() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкиПользователей.Владелец КАК Пользователь
	               |ИЗ
	               |	Справочник.НастройкиПользователей КАК НастройкиПользователей
	               |ГДЕ
	               |	НастройкиПользователей.Автотрудозатраты";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
	
КонецФункции

Функция ТаблицаКоличествоНераспределенныхМинут(Пользователи) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ЕСТЬNULL(ЗадачиФактическиеТрудозатраты.ЗатраченноеВремя, 0)) КАК ЗатраченныеМинуты,
	               |	ЗадачиФактическиеТрудозатраты.Ссылка.Ответственный КАК Пользователь
	               |ПОМЕСТИТЬ втЗатраченныеМинуты
	               |ИЗ
	               |	Справочник.Задачи.ФактическиеТрудозатраты КАК ЗадачиФактическиеТрудозатраты
	               |ГДЕ
	               |	ЗадачиФактическиеТрудозатраты.ДатаНачала МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И ЗадачиФактическиеТрудозатраты.Ссылка.Ответственный В(&Пользователи)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗадачиФактическиеТрудозатраты.Ссылка.Ответственный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	480 - втЗатраченныеМинуты.ЗатраченныеМинуты КАК РаспределяемоеКоличество,
	               |	втЗатраченныеМинуты.Пользователь КАК Пользователь
	               |ИЗ
	               |	втЗатраченныеМинуты КАК втЗатраченныеМинуты";
	
	Запрос.УстановитьПараметр("Пользователи", Пользователи);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДатаСеанса()));

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПользовательПоЭлектроннойПочте(Почта) Экспорт
	
	Элемент = НайтиПоРеквизиту("ПочтаПользователяGit", Почта);
	Если ЗначениеЗаполнено(Элемент) Тогда
		Возврат Элемент.Владелец;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли

